/* ==========================
   MediaQueries
例)
div {
  width: 100px;
  height: 100px;
  // PCレイアウト - @media screen and (min-width: 851px)
  @include mq-desktop {
    background-color: salmon;
  }
  // SPレイアウト - @media screen and (max-width: 850px)
  @include mq-mobile {
    background-color: cyan;
  }
  // 320px〜850px - @media screen and (min-width: 320px) and (max-width: 850px)
  @include mq($from: mobile, $until: tablet) {
    background-color: salmon;
  }
  // 1440px以上 - @media screen and (min-width: 1440px)
  @include mq($from: wide) {
    background-color: salmon;
  }
  // 横向き - @media screen and (max-width: 850px) and (orientation: landscape)
  @include mq($until: tablet, $and: '(orientation: landscape)') {
    background-color: salmon;
  }
}
 ========================== */
@use 'sass:map';
@use './breakpoints.scss' as *;

/* メディアタイプ（default: screen） */
$media-type: screen !default;

/* --------------------------
   ブレークポイントの数値取得メソッド
   @param {String} $name - $breakpointsのキー名
 -------------------------- */
@function get-breakpoint-width($name, $breakpoints: $breakpoints) {
  @if map.has-key($breakpoints, $name) {
    @return map.get($breakpoints, $name);
  } @else {
    @warn "Breakpoint #{$name} wasn't found in $breakpoints.";
    @return null;
  }
}

/* --------------------------
   メディアクエリ生成
   @param {String | Boolean} $from [false] - min-widthに設定される値
   @param {String | Boolean} $until [false] - max-widthに設定される値
   @param {String | Boolean} $and [false] - 追加のメディアクエリ
   @ignore @param {Map} $breakpoints [$breakpoints]
 -------------------------- */
@mixin mq($from: false, $until: false, $and: false, $breakpoints: $breakpoints) {
  $min-width: 0;
  $max-width: 0;
  $media-query: '';

  @if $from {
    @if type-of($from) == number {
      $min-width: $from + 'px';
    } @else {
      $min-width: get-breakpoint-width($from, $breakpoints);
    }
  }
  @if $until {
    @if type-of($until) == number {
      $max-width: $until + 'px';
    } @else {
      $max-width: get-breakpoint-width($until, $breakpoints) - 1px;
    }
  }
  @if $min-width != 0 {
    $media-query: '#{$media-query} and (min-width: #{$min-width})';
  }
  @if $max-width != 0 {
    $media-query: '#{$media-query} and (max-width: #{$max-width})';
  }
  @if $and {
    $media-query: '#{$media-query} and #{$and}';
  }

  @media #{$media-type + $media-query} {
    @content;
  }
}

/* PC用のメディアクエリ生成 */
@mixin mq-desktop() {
  @include mq($from: tablet) {
    @content;
  }
  @include mq($until: tablet, $and: '(orientation: landscape)') {
    @content;
  }
}

/* SP用のメディアクエリ生成 */
@mixin mq-mobile() {
  // @include mq($until: tablet) {
  @include mq($until: tablet, $and: '(orientation: portrait)') {
    @content;
  }
}

/* タブレット用のメディアクエリ生成 */
@mixin mq-tablet() {
  @include mq($from: tablet, $until: desktop) {
    @content;
  }
}
